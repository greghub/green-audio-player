name: Generate PR Description
on: 
  pull_request:
    types: [opened]
jobs: 
  call-api: 
    runs-on: ubuntu-latest
    steps:
      - name: Log event
        run: echo "${{ toJSON(github.event.pull_request) }}"
      - name: Call PR Generation API
        id: request
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://us-central1-alert-vim-413707.cloudfunctions.net/generate_pr_description'
          method: 'POST'
          preventFailureOnNoResponse: true
          # bearerToken: ${{ secrets.BEARER_TOKEN }}
          # customHeaders: '{"Content-Type": "application/json"}'
          timeout: 60000
          data: '{"git_repo_url": "${{ github.server_url}}/${{github.repository }}", "base_branch_name": "${{ github.base_ref }}", "branch_name" : "${{ github.head_ref }}"}'
      - name: Show Response
        run: |
          echo ${{ steps.request.outputs.response }}
          echo ${{ steps.request.outputs.headers }}
          echo ${{ steps.request.outputs.response }} > response.out
          result=$(cat response.out)
          result="ğŸ¤– Here is a PR Description generated by AI: \n\n ${result}"
          result="${result//'%'/'%25'}"
          result="${result//$'\n'/'%0A'}"
          result="${result//$'\r'/'%0D'}" 
          echo -e $result > response.md
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: ${{ github.event.pull_request.user.login }}
      - run: echo ${{ steps.fc.outputs.comment-id }}
      - name: Post Comment
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          #issue-number:  ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body-path: 'response.md'
          edit-mode: append
